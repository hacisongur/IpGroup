@model ProgrammersBlog.Entities.Dtos.CategoryUpdateDto
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.13/jquery.validate.unobtrusive.min.js"></script>

<div class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><span class="fas fa-edit"></span> @Model.Name Adlı Kategori Düzenleniyor...</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="İptal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="Update" id="form-category-update">
                    <input name="IsValid" type="hidden" value="@ViewData.ModelState.IsValid.ToString()" />
                    <div asp-validation-summary="All" class="text-danger" id="validation-summary" aria-hidden="true" style="display: none;"></div>
                    <input type="hidden" asp-for="Id" />
                    <div class="form-group">
                        <label asp-for="Name"></label>
                        <input class="form-control" asp-for="Name" />
                        <span class="text-danger" asp-validation-for="Name"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Description"></label>
                        @{
                            var descriptions = new List<string> {
                        "Destek Hizmetleri Md.lüğü",
                        "Basın,Yayın ve Halkla İlişkiler Md.lüğü",
                        "Temizlik İşleri Müdürlüğü",
                        "Etüt Proje Müdürlüğü",
                        "Hukuk İşleri Müdürlüğü",
                        "İmar ve Şehircilik Müdürlüğü",
                        "İnsan Kaynak.ve Eğt.Müdürlüğü",
                        "İşletme iştirakler Müdürlüğü",
                        "İtfaiye Müdürlüğü",
                        "Kadın ve Aile Hizmetleri Müdürülüğü",
                        "Kültür ve Sosyal İşler Müdürlüğü",
                        "Makine İkmal,Bakım ve Onr.Md.lüğü",
                        "Mali Hizmetler Müdürlüğü",
                        "Mezarlıklar Müdürlüğü",
                        "Muhtarlık İşleri Müdürlüğü",
                        "Özel Kalem Müdürlüğü",
                        "Park-Bahçeler Müdürlüğü",
                        "Sağlık İşleri Müdürlüğü",
                        "Sosyal Yardım İşleri Müdürlüğü",
                        "Su ve Kanalizasyon Müdürlüğü",
                        "Ulaşım Hizmetleri Müdürlüğü",
                        "Yapı Kontrol Müdürlüğü",
                        "Yazı İşleri Müdürlüğü",
                        "Spor İşleri Müdürlüğü",
                        "Zabıta Müdürlüğü",
                        "Çevre Koruma ve Kontrol Müdürlüğü",
                        "Veteriner İşleri Müdürlüğü",
                        "Fen İşleri Müdürlüğü",
                        "Konukevi Müdürlüğü",
                        "Bilgi İşlem Müdürlüğü",
                        "Kentsel Dönüşüm Müdürlüğü",
                        "Afet İşleri Müdürlüğü"
                        };
                        }

                        <select class="form-control" id="Description" name="Description">
                            <option value="">Seçiniz...</option>
                            @foreach (var description in descriptions)
                            {
                                <option value="@description" selected="@(Model.Description == description ? "selected" : null)">@description</option>
                            }
                        </select>
                        <span class="text-danger" asp-validation-for="Description"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Oda"></label>
                        <input class="form-control" asp-for="Oda" />
                        <span class="text-danger" asp-validation-for="Oda"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="IpNo"></label>
                        <input class="form-control" asp-for="IpNo" id="IpNo"
                               pattern="^(\d{1,3}\.){3}\d{1,3}$"
                               placeholder="172.16.0.100"
                               title="Geçerli bir IP adresi girin (örn.  172.16.0.100)" />
                        <span class="text-danger" asp-validation-for="IpNo"></span>
                        <span class="text-danger" id="IpNoValidationMessage"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="PcAdi"></label>
                        <input class="form-control" asp-for="PcAdi" />
                        <span class="text-danger" asp-validation-for="PcAdi"></span>
                    </div>
                   <div class="form-group">
                      <label asp-for="Bina"></label>
                        @{
                            var binalar = new List<string> {
                        "Ana Hizmet Binası",
                        "Ek Hizmet Binası",
                        "Makine İkmal",
                        "Zabıta Müdürlüğü"
                        };
                        }

                        <select class="form-control" id="Bina" name="Bina">
                            <option value="">Seçiniz...</option>
                            @foreach (var bina in binalar)
                            {
                                <option value="@bina" selected="@(Model.Bina == bina ? "selected" : null)">@bina</option>
                            }
                        </select>
                  <span class="text-danger" asp-validation-for="Bina"></span>
                  </div>

                    <div class="form-group form-check">
                        <input type="checkbox" class="form-check-input" asp-for="IsActive" />
                        <label asp-for="IsActive" class="form-check-label"></label>
                        <span class="text-danger" asp-validation-for="IsActive"></span>
                    </div>
                    <div class="form-group form-check">
                        <input type="checkbox" class="form-check-input" asp-for="IsDeleted" />
                        <label asp-for="IsDeleted" class="form-check-label"></label>
                        <span class="text-danger" asp-validation-for="IsDeleted"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger btn-block" data-dismiss="modal"><span class="fas fa-times"></span> İptal</button>
                <button type="button" class="btn btn-primary btn-block" id="btnUpdate"><span class="fas fa-save"></span> Kaydet</button>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    $(document).ready(function () {
        $('#btnUpdate').click(function () {
            const isDeleted = $('#IsDeleted').is(':checked'); // IsDeleted checkbox'ının durumu
            const categoryId = $('input[name="Id"]').val(); // Güncellenen kategori Id'si
            const hardDeleteUrl = '/Admin/Category/HardDelete'; // HardDelete API URL'si
            const updateUrl = '/Admin/Category/Update'; // Update API URL'si

            if (isDeleted) {
                // IsDeleted seçili ise HardDelete işlemi başlatılır
                $.ajax({
                    type: 'POST',
                    url: hardDeleteUrl,
                    data: { categoryId: categoryId },
                    success: function (response) {
                        if (response.success) {
                            // Başarılı bir şekilde silme işlemi gerçekleşti
                            Swal.fire({
                                title: 'Başarılı!',
                                text: 'Veritabanında silme işlemi başarılı bir şekilde gerçekleşti.',
                                icon: 'success',
                                confirmButtonText: 'Tamam'
                            }).then(() => {
                                location.reload(); // Sayfayı yeniden yükle
                            });
                        } else {
                            Swal.fire({
                                title: 'Hata!',
                                text: 'Silme işlemi başarısız: ' + response.message,
                                icon: 'error',
                                confirmButtonText: 'Tamam'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: 'Hata!',
                            text: 'Silme işlemi sırasında bir hata oluştu.',
                            icon: 'error',
                            confirmButtonText: 'Tamam'
                        });
                    }
                });
            } else {
                const formData = $('#form-category-update').serialize(); // Form verilerini al
                $.ajax({
                    type: 'POST',
                    url: updateUrl,
                    data: formData,
                    success: function (response) {
                        Swal.fire({
                            title: 'Başarılı!',
                            text: 'Güncelleme işlemi başarılı bir şekilde tamamlandı.',
                            icon: 'success',
                            confirmButtonText: 'Tamam'
                        });
                    },
                    error: function () {
                        Swal.fire({
                            title: 'Hata!',
                            text: 'Güncelleme işlemi sırasında bir hata oluştu.',
                            icon: 'error',
                            confirmButtonText: 'Tamam'
                        });
                    }
                });
            }
        });
    });
</script>


